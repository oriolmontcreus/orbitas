---
interface Props {
	title: string;
}

const { title } = Astro.props;
import '../app.css';
import { ModeWatcher } from "mode-watcher";
---

<script is:inline>
	const isBrowser = typeof localStorage !== "undefined";
	const getThemePreference = () => {
	  if (isBrowser && localStorage.getItem("theme")) {
		return localStorage.getItem("theme");
	  }
	  return window.matchMedia("(prefers-color-scheme: dark)").matches
		? "dark"
		: "light";
	};
	const isDark = getThemePreference() === "dark";
	document.documentElement.classList[isDark ? "add" : "remove"]("dark");
  
	if (isBrowser) {
	  const observer = new MutationObserver(() => {
		const isDark = document.documentElement.classList.contains("dark");
		localStorage.setItem("theme", isDark ? "dark" : "light");
	  });
	  observer.observe(document.documentElement, {
		attributes: true,
		attributeFilter: ["class"],
	  });
	}
  </script>

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<ModeWatcher client:load />
		<slot />
	</body>
</html>
<style is:global>
	html {
		font-family: system-ui, sans-serif;
		background: #09090b;
		color-scheme: dark;
		scroll-behavior: smooth;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
</style>
